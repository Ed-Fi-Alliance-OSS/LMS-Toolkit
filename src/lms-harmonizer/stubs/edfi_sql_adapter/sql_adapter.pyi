from collections import namedtuple
from sqlalchemy.engine.base import Engine as sa_Engine
from sqlalchemy.orm import Session as sa_Session
from typing import Any, Callable, List, TypeVar

logger: Any
T = TypeVar('T')

Statement = namedtuple('Statement', 'sql, info_msg')

class Adapter:
    engine: sa_Engine
    def __init__(self, engine: sa_Engine) -> None: ...
    def execute_transaction(self, function: Callable[[sa_Session], T]) -> T: ...
    def execute_script(self, statements: List[str]) -> None: ...
    def execute(self, statements: List[Statement]) -> None: ...
    def get_int(self, statement: str) -> int: ...

def create_mssql_adapter(username: str, password: str, server: str, db_name: str, port: int=...) -> Adapter: ...
def create_mssql_adapter_with_integrated_security(server: str, db_name: str, port: int=...) -> Adapter: ...
def create_postgresql_adapter(username: str, password: str, server: str, db_name: str, port: int=...) -> Adapter: ...
